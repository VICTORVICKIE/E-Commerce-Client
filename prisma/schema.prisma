// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("SECRET_DATABASE_URL")
  relationMode = "prisma"
}

// This works fine, but more robust way is to use notify_token per browser
// with a UUID in cookie/local storage per broswer and save token for each.
model User {
  id              String    @id @default(uuid())
  phone           String    @unique
  name            String
  address         String
  role            String    @default("USER")
  notify          Boolean   @default(false)
  notify_token    String?
  hashed_password String
  orders          Order[]
  session         Session[]

  @@index([phone])
  @@index([role])
}

model Session {
  id      String @id @default(uuid())
  expires BigInt
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id String

  @@index([user_id])
}

model Product {
  id           Int     @id @default(autoincrement())
  name         String  @unique
  brand        String
  category     String
  price        Float
  description  String?
  image_url    String
  search_terms String
  items        Item[]

  @@index([name])
}

model Order {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  total      Float
  discount   Float    @default(0)
  ordered_at DateTime @default(now())
  updated_at DateTime @updatedAt
  state      State    @default(ORDERED)
  items      Item[]

  @@index([user_id])
  @@index([state])
}

enum State {
  PENDING
  ORDERED
  DELIVERED
  CANCELLED
}

model Item {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id   Int
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
  quantity   Int
  subtotal   Float

  @@index([order_id])
  @@index([product_id])
}
