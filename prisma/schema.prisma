// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("PROD_DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id      String    @id @unique
  phone   String    @unique
  name    String
  address String
  role    String    @unique @default("USER")
  orders  Order[]
  session Session[]
  key     Key[]

  @@index([phone])
  @@index([role])
  @@map("user")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  brand       String
  category    String
  price       Decimal
  description String?
  image_url   String
  items       Item[]

  @@index([name])
}

model Order {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  total      Decimal
  ordered_at DateTime @default(now())
  updated_at DateTime @updatedAt
  state      State    @default(ORDERED)
  items      Item[]

  @@index([user_id])
  @@index([state])
}

enum State {
  PENDING
  ORDERED
  DELIVERED
  CANCELLED
}

model Item {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [order_id], references: [id])
  order_id   Int
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
  quantity   Int

  @@index([order_id])
  @@index([product_id])
}
